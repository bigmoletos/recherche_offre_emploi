{
  "name": "Test Mistral avec Code - Debug",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "D√©clencheur Manuel",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// G√©n√©ration de donn√©es de test\nreturn [\n  {\n    json: {\n      title: \"Alternance Cybers√©curit√© - Analyste SOC\",\n      company: \"TechSecure Corp\", \n      location: \"Paris\",\n      description: \"Rejoignez notre √©quipe SOC pour analyser les incidents de s√©curit√© informatique. Formation en alternance de 24 mois.\",\n      scraper_source: \"pole_emploi\"\n    }\n  }\n];"
      },
      "id": "donnees-test",
      "name": "Donn√©es Test",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Appel direct √† l'API Mistral avec fetch\nconst apiKey = 'VOTRE_CLE_API_ICI'; // Remplacer par vraie cl√©\nconst mistralData = {\n  model: \"mistral-small-latest\",\n  messages: [\n    {\n      role: \"user\",\n      content: `Analyse cette offre d'alternance: ${$input.first().json.title} chez ${$input.first().json.company} √† ${$input.first().json.location}. R√©ponds par VALIDE ou INVALIDE.`\n    }\n  ],\n  temperature: 0.1,\n  max_tokens: 10\n};\n\nconsole.log('üöÄ Requ√™te Mistral:', JSON.stringify(mistralData, null, 2));\n\ntry {\n  const response = await fetch('https://api.mistral.ai/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${apiKey}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(mistralData)\n  });\n  \n  const result = await response.json();\n  \n  if (response.ok) {\n    return [{\n      json: {\n        success: true,\n        mistral_response: result,\n        original_offer: $input.first().json\n      }\n    }];\n  } else {\n    return [{\n      json: {\n        success: false,\n        error: result,\n        status: response.status,\n        original_offer: $input.first().json\n      }\n    }];\n  }\n} catch (error) {\n  return [{\n    json: {\n      success: false,\n      error: error.message,\n      original_offer: $input.first().json\n    }\n  }];\n}"
      },
      "id": "test-mistral-code",
      "name": "Test Mistral Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    }
  ],
  "connections": {
    "D√©clencheur Manuel": {
      "main": [
        [
          {
            "node": "Donn√©es Test",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Donn√©es Test": {
      "main": [
        [
          {
            "node": "Test Mistral Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "test-mistral-code",
      "name": "Test Mistral Code"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-06-03T17:10:00.000Z",
  "versionId": "1.0.0"
}