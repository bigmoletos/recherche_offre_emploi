{
  "name": "Classification Mistral - HTTP Request",
  "nodes": [
    {
      "parameters": {},
      "id": "a8c7f4d1-234e-4567-8901-23456789abcd",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// G√âN√âRATEUR D'OFFRES TEST R√âALISTES\nconsole.log('üß™ === G√âN√âRATION OFFRES TEST R√âALISTES ===');\n\nconst offresTest = [\n  {\n    id: 'test-valide-1',\n    title: 'Contrat d\\'apprentissage - Analyste Cybers√©curit√© SOC',\n    company: 'Orange Cyberdefense',\n    description: 'Nous proposons un contrat d\\'apprentissage de 24 mois pour former un analyste cybers√©curit√© au sein de notre SOC (Security Operations Center). Missions : surveillance des syst√®mes d\\'information, analyse des incidents de s√©curit√©, r√©ponse aux alertes SIEM, veille technologique. Formation : Master 2 cybers√©curit√© en alternance.',\n    location: 'Paris, France',\n    contract_type: 'Contrat d\\'apprentissage',\n    keywords: ['apprentissage', 'cybers√©curit√©', 'SOC', 'alternance'],\n    attendu: 'VALIDE'\n  },\n  {\n    id: 'test-invalide-1',\n    title: 'Stage - Marketing Digital et Communication',\n    company: 'AgenceComm',\n    description: 'Stage de 6 mois en marketing digital. Missions : gestion des r√©seaux sociaux, cr√©ation de contenu, campagnes publicitaires, analyse des performances. Recherche √©tudiant en Master Marketing.',\n    location: 'Lyon, France',\n    contract_type: 'Stage',\n    keywords: ['stage', 'marketing', 'digital', 'communication'],\n    attendu: 'INVALIDE'\n  },\n  {\n    id: 'test-valide-2',\n    title: 'Alternance - Pentesteur Junior en Formation',\n    company: 'Wavestone Cybersecurity',\n    description: 'Formation alternance de 2 ans pour devenir pentesteur. Missions : tests d\\'intrusion sur applications web, audit de s√©curit√© r√©seau, r√©daction de rapports de vuln√©rabilit√©s.',\n    location: 'Marseille, France',\n    contract_type: 'Contrat de professionnalisation',\n    keywords: ['alternance', 'pentest', 'cybers√©curit√©', 'audit'],\n    attendu: 'VALIDE'\n  },\n  {\n    id: 'test-invalide-2',\n    title: 'CDI - Ing√©nieur Cybers√©curit√© Senior 7+ ans',\n    company: 'Thales Group',\n    description: 'Poste d\\'ing√©nieur cybers√©curit√© senior avec 7+ ann√©es d\\'exp√©rience. Missions : architecture s√©curit√©, gestion d\\'√©quipe, audits complexes.',\n    location: 'Toulouse, France',\n    contract_type: 'CDI',\n    keywords: ['CDI', 'senior', 'cybers√©curit√©', 'exp√©rience'],\n    attendu: 'INVALIDE'\n  },\n  {\n    id: 'test-valide-3',\n    title: 'Apprentissage - Consultant GRC S√©curit√© D√©butant',\n    company: 'Deloitte Cyber Risk',\n    description: 'Contrat d\\'apprentissage en Gouvernance, Risque et Conformit√© (GRC) cybers√©curit√©. Missions : analyse des risques cyber, mise en conformit√© RGPD/ISO27001.',\n    location: 'Nantes, France',\n    contract_type: 'Contrat d\\'apprentissage',\n    keywords: ['apprentissage', 'GRC', 'cybers√©curit√©', 'conformit√©'],\n    attendu: 'VALIDE'\n  },\n  {\n    id: 'test-invalide-3',\n    title: 'Stage - S√©curit√© des B√¢timents et Surveillance',\n    company: 'Securitas France',\n    description: 'Stage de 4 mois en s√©curit√© physique des b√¢timents. Missions : surveillance vid√©o, contr√¥le d\\'acc√®s, rondes de s√©curit√©.',\n    location: 'Bordeaux, France',\n    contract_type: 'Stage',\n    keywords: ['stage', 's√©curit√© physique', 'surveillance', 'b√¢timent'],\n    attendu: 'INVALIDE'\n  }\n];\n\nconsole.log('üìã Offres test g√©n√©r√©es:', offresTest.length);\nconsole.log('‚úÖ Offres VALIDES attendues: 3');\nconsole.log('‚ùå Offres INVALIDES attendues: 3');\n\noffresTest.forEach((offre, index) => {\n  console.log(`${index + 1}. ${offre.title} ‚Üí ${offre.attendu}`);\n});\n\nreturn offresTest.map(offre => ({ json: offre }));"
      },
      "id": "b9d8e5f2-345f-5678-9012-3456789abcde",
      "name": "üß™ G√©n√©rateur Offres Test",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// PR√âPARATION DU PROMPT POUR MISTRAL\nconst offre = $input.item.json;\n\nconsole.log(`ü§ñ === PR√âPARATION PROMPT: ${offre.title} ===`);\nconsole.log('üîë ID offre:', offre.id);\nconsole.log('üìù Type contrat:', offre.contract_type);\nconsole.log('üéØ R√©sultat attendu:', offre.attendu);\n\nconst prompt = `Tu es un expert RH sp√©cialis√© en cybers√©curit√© et contrats d'alternance.\n\nüéØ **MISSION**: Analyser si cette offre correspond EXACTEMENT √† une ALTERNANCE en CYBERS√âCURIT√â.\n\nüìã **OFFRE √Ä ANALYSER**:\n‚Ä¢ **Titre**: ${offre.title}\n‚Ä¢ **Entreprise**: ${offre.company}\n‚Ä¢ **Description**: ${offre.description}\n‚Ä¢ **Type de contrat**: ${offre.contract_type}\n‚Ä¢ **Mots-cl√©s**: ${offre.keywords.join(', ')}\n\nüîç **CRIT√àRES OBLIGATOIRES**:\n\n**1. TYPE DE CONTRAT (CRITIQUE)**:\n‚úÖ ALTERNANCE: \"alternance\", \"apprentissage\", \"contrat pro\", \"contrat de professionnalisation\"\n‚ùå AUTRES: \"stage\", \"CDI\", \"CDD\", \"freelance\", \"mission\"\n\n**2. DOMAINE CYBERS√âCURIT√â (CRITIQUE)**:\n‚úÖ CYBER: \"cybers√©curit√©\", \"s√©curit√© informatique\", \"s√©curit√© des SI\"\n‚úÖ SP√âCIALIT√âS: \"SOC\", \"SIEM\", \"pentest\", \"audit s√©curit√©\", \"GRC\", \"forensic\"\n‚ùå AUTRES: \"s√©curit√© physique\", \"s√©curit√© b√¢timent\", \"surveillance\", \"marketing\"\n\nüìù **FORMAT DE R√âPONSE OBLIGATOIRE**:\n**CLASSIFICATION**: VALIDE ou INVALIDE\n**JUSTIFICATION**: [Explique en 1-2 phrases pourquoi]\n\nAnalyse maintenant cette offre.`;\n\nconst payload = {\n  model: \"mistral-large-latest\",\n  messages: [\n    {\n      role: \"system\",\n      content: \"Tu es un expert RH avec 15 ans d'exp√©rience en cybers√©curit√© et alternance. Tu analyses les offres avec pr√©cision.\"\n    },\n    {\n      role: \"user\",\n      content: prompt\n    }\n  ],\n  temperature: 0.05,\n  max_tokens: 300\n};\n\nconsole.log('üì¶ Payload pr√©par√© pour HTTP Request');\nconsole.log('üìè Taille prompt:', prompt.length, 'caract√®res');\n\n// Passer les donn√©es √† HTTP Request\nreturn {\n  json: {\n    ...offre,\n    mistral_payload: payload,\n    prompt_size: prompt.length\n  }\n};"
      },
      "id": "c0e9f6g3-456g-6789-0123-456789abcdef",
      "name": "üìù Pr√©paration Prompt",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer fe8GdBIIBwYk8Dj1GvclASPE3j0Zbt95"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "{\n  \"model\": \"{{ $json.mistral_payload.model }}\",\n  \"messages\": {{ $json.mistral_payload.messages }},\n  \"temperature\": {{ $json.mistral_payload.temperature }},\n  \"max_tokens\": {{ $json.mistral_payload.max_tokens }}\n}",
        "options": {}
      },
      "id": "d1f0a7h4-567h-7890-1234-56789abcdef0",
      "name": "üåê Appel Mistral API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// ANALYSE DE LA R√âPONSE MISTRAL\nconst offre = $input.first().json;\nconst mistralResponse = $input.last().json;\n\nconsole.log(`üì• === ANALYSE R√âPONSE MISTRAL: ${offre.title} ===`);\nconsole.log('üîë ID offre:', offre.id);\nconsole.log('üéØ R√©sultat attendu:', offre.attendu);\n\n// V√©rifier la structure de la r√©ponse\nif (!mistralResponse.choices || !mistralResponse.choices[0] || !mistralResponse.choices[0].message) {\n  console.log('‚ùå Structure r√©ponse Mistral invalide');\n  console.log('üîç Cl√©s trouv√©es:', Object.keys(mistralResponse));\n  \n  return {\n    json: {\n      ...offre,\n      mistral_response: 'STRUCTURE_INVALIDE',\n      classification: 'ERREUR',\n      is_valid: false,\n      confidence: 0,\n      error: 'Structure r√©ponse Mistral invalide',\n      processed_at: new Date().toISOString()\n    }\n  };\n}\n\nconst content = mistralResponse.choices[0].message.content.trim();\nconsole.log('üìù R√©ponse Mistral compl√®te:', content);\n\n// Classification avec logs de d√©bogage d√©taill√©s\nconst contentUpper = content.toUpperCase();\nlet classification, isValid, confidence;\n\n// Recherche de patterns pr√©cis\nconst hasClassificationValide = /\\*\\*CLASSIFICATION\\*\\*:\\s*VALIDE/i.test(content);\nconst hasClassificationInvalide = /\\*\\*CLASSIFICATION\\*\\*:\\s*INVALIDE/i.test(content);\nconst hasValideSimple = contentUpper.includes('VALIDE') && !contentUpper.includes('INVALIDE');\nconst hasInvalideSimple = contentUpper.includes('INVALIDE');\n\nconsole.log('üîç === DEBUG CLASSIFICATION ===');\nconsole.log('Pattern **CLASSIFICATION**: VALIDE found:', hasClassificationValide);\nconsole.log('Pattern **CLASSIFICATION**: INVALIDE found:', hasClassificationInvalide);\nconsole.log('Simple VALIDE (sans INVALIDE):', hasValideSimple);\nconsole.log('Simple INVALIDE:', hasInvalideSimple);\nconsole.log('Content contains VALIDE:', contentUpper.includes('VALIDE'));\nconsole.log('Content contains INVALIDE:', contentUpper.includes('INVALIDE'));\n\nif (hasClassificationValide || (hasValideSimple && !hasInvalideSimple)) {\n  classification = 'VALIDE';\n  isValid = true;\n  confidence = 0.9;\n  console.log('‚úÖ OFFRE VALID√âE');\n} else if (hasClassificationInvalide || hasInvalideSimple) {\n  classification = 'INVALIDE';\n  isValid = false;\n  confidence = 0.9;\n  console.log('‚ùå OFFRE REJET√âE');\n} else {\n  classification = 'INCERTAIN';\n  isValid = false;\n  confidence = 0.3;\n  console.log('‚ö†Ô∏è CLASSIFICATION INCERTAINE');\n}\n\n// V√©rification avec r√©sultat attendu\nconst isCorrect = classification === offre.attendu;\nconsole.log(`üéØ Classification: ${classification}`);\nconsole.log(`üéØ Attendu: ${offre.attendu}`);\nconsole.log(`‚úÖ Correct: ${isCorrect}`);\n\n// Retour enrichi\nreturn {\n  json: {\n    ...offre,\n    mistral_response: content,\n    classification: classification,\n    is_valid: isValid,\n    confidence: confidence,\n    model_used: mistralResponse.model || 'mistral-large-latest',\n    usage: mistralResponse.usage || {},\n    processed_at: new Date().toISOString(),\n    classification_correct: isCorrect,\n    debug: {\n      hasClassificationValide,\n      hasClassificationInvalide,\n      hasValideSimple,\n      hasInvalideSimple\n    }\n  }\n};"
      },
      "id": "e2g1b8i5-678i-8901-2345-6789abcdef01",
      "name": "üîç Analyse R√©ponse",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "12345678-abcd-1234-abcd-123456789abc",
              "leftValue": "={{ $json.classification }}",
              "rightValue": "VALIDE",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f3h2c9j6-789j-9012-3456-789abcdef012",
      "name": "Offre Valide ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "33333333-4444-5555-6666-777777777777",
              "name": "action",
              "value": "OFFRE_ACCEPTEE",
              "type": "string"
            },
            {
              "id": "99999999-aaaa-bbbb-cccc-dddddddddddd",
              "name": "message",
              "value": "‚úÖ Offre valid√©e pour alternance cybers√©curit√©",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "g4i3d0k7-890k-0123-4567-890abcdef123",
      "name": "üíö Traitement Valide",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "55555555-6666-7777-8888-999999999999",
              "name": "action",
              "value": "OFFRE_REJETEE",
              "type": "string"
            },
            {
              "id": "bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
              "name": "message",
              "value": "‚ùå Offre ne correspond pas aux crit√®res",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "h5j4e1l8-901l-1234-5678-901abcdef234",
      "name": "‚ùå Traitement Invalide",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1560, 400]
    }
  ],
  "pinData": {},
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "üß™ G√©n√©rateur Offres Test",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üß™ G√©n√©rateur Offres Test": {
      "main": [
        [
          {
            "node": "üìù Pr√©paration Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Pr√©paration Prompt": {
      "main": [
        [
          {
            "node": "üåê Appel Mistral API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üåê Appel Mistral API": {
      "main": [
        [
          {
            "node": "üîç Analyse R√©ponse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Analyse R√©ponse": {
      "main": [
        [
          {
            "node": "Offre Valide ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Offre Valide ?": {
      "main": [
        [
          {
            "node": "üíö Traitement Valide",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚ùå Traitement Invalide",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "12345678-1234-1234-1234-123456789abc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "12345678-1234-1234-1234-123456789abc"
  },
  "id": "12345678-1234-1234-1234-123456789abc",
  "tags": []
}