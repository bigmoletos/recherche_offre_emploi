{
  "name": "üéØ Alternance Cybers√©curit√© - CORRIG√â",
  "nodes": [
    {
      "parameters": {},
      "id": "ced2d832-08f4-4913-abed-e31aac8adae7",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -1320,
        100
      ]
    },
    {
      "parameters": {
        "jsCode": "// CONFIGURATION SITES D'EMPLOI FRAN√áAIS\nconsole.log('üá´üá∑ === CONFIGURATION SITES EMPLOI FRANCE ===');\n\n// Sites avec leurs sp√©cificit√©s pour l'alternance\nconst sitesEmploi = [\n  {\n    name: 'France Travail',\n    baseUrl: 'https://www.francetravail.fr',\n    alternanceUrl: 'https://candidat.francetravail.fr/offres/recherche?motsCles=cybers√©curit√©&typeContrat=A1&tri=0',\n    type: 'gouv',\n    priority: 1,\n    enabled: true,\n    description: 'Site officiel emploi public fran√ßais'\n  },\n  {\n    name: 'La Bonne Alternance',\n    baseUrl: 'https://labonnealternance.pole-emploi.fr',\n    alternanceUrl: 'https://labonnealternance.pole-emploi.fr/?job=cybers√©curit√©&location=France&radius=100',\n    type: 'alternance',\n    priority: 2,\n    enabled: true,\n    description: 'Plateforme d√©di√©e alternance P√¥le Emploi'\n  },\n  {\n    name: 'Indeed France',\n    baseUrl: 'https://fr.indeed.com',\n    alternanceUrl: 'https://fr.indeed.com/jobs?q=cybers√©curit√©+alternance&l=France&sort=date&fromage=7',\n    type: 'agregateur',\n    priority: 3,\n    enabled: true,\n    description: 'Agr√©gateur d\\'offres international'\n  },\n  {\n    name: 'APEC',\n    baseUrl: 'https://www.apec.fr',\n    alternanceUrl: 'https://www.apec.fr/candidat/recherche-emploi.html/emploi?motsCles=cybers√©curit√©&typeContrat=132810',\n    type: 'cadres',\n    priority: 4,\n    enabled: true,\n    description: 'Emploi cadres et jeunes dipl√¥m√©s'\n  },\n  {\n    name: 'Walt Community',\n    baseUrl: 'https://walt.community',\n    alternanceUrl: 'https://walt.community/jobs?search=cybers√©curit√©&type=alternance',\n    type: 'alternance',\n    priority: 5,\n    enabled: true,\n    description: 'Communaut√© sp√©cialis√©e alternance'\n  }\n];\n\nconsole.log('üìä Sites configur√©s:', sitesEmploi.length);\nconsole.log('‚úÖ Sites actifs:', sitesEmploi.filter(s => s.enabled).length);\n\n// G√©n√©ration des t√¢ches de scraping\nconst scrapingTasks = sitesEmploi\n  .filter(site => site.enabled)\n  .map((site, index) => {\n    return {\n      task_id: `scraping-${site.name.toLowerCase().replace(/\\s+/g, '-')}-${Date.now()}`,\n      site_name: site.name,\n      site_type: site.type,\n      target_url: site.alternanceUrl,\n      base_url: site.baseUrl,\n      priority: site.priority,\n      description: site.description,\n      search_focus: 'alternance cybers√©curit√©',\n      expected_results: {\n        min_offers: 1,\n        max_offers: 50,\n        contract_types: ['apprentissage', 'alternance', 'contrat pro']\n      },\n      scraping_config: {\n        timeout: 30000,\n        retry_count: 3,\n        user_agent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\n        respect_robots: true\n      },\n      created_at: new Date().toISOString(),\n      status: 'PENDING'\n    };\n  });\n\nconsole.log('üöÄ T√¢ches de scraping cr√©√©es:', scrapingTasks.length);\nscrapingTasks.forEach((task, index) => {\n  console.log(`${index + 1}. ${task.site_name} (${task.site_type}) - Priorit√© ${task.priority}`);\n});\n\nreturn scrapingTasks.map(task => ({ json: task }));"
      },
      "id": "af1253fc-c7b6-42a9-b6e8-f35d41eb41ca",
      "name": "üá´üá∑ Config Sites France",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1100,
        100
      ]
    },
    {
      "parameters": {
        "jsCode": "// SIMULATION SCRAPING AVEC DONN√âES R√âALISTES\nconst task = $input.item.json;\n\nconsole.log(`üåê === SCRAPING ${task.site_name} ===`);\nconsole.log('üéØ URL cible:', task.target_url);\nconsole.log('‚öôÔ∏è Type de site:', task.site_type);\n\n// Simulation de donn√©es r√©alistes par type de site\nconst mockOffersBySite = {\n  'France Travail': [\n    {\n      title: 'Contrat d\\'apprentissage - Analyste Cybers√©curit√© SOC H/F',\n      company: 'ANSSI - Agence Nationale S√©curit√©',\n      description: 'Formation alternance 24 mois - Analyste SOC junior. Surveillance syst√®mes, analyse incidents s√©curit√©, r√©ponse aux alertes SIEM. Formation dipl√¥mante niveau Bac+3.',\n      contract_type: 'Contrat d\\'apprentissage',\n      location: 'Paris 15√®me (75)',\n      salary_range: '1200-1500‚Ç¨/mois',\n      start_date: '2025-09-01',\n      duration: '24 mois',\n      url: 'https://candidat.francetravail.fr/offres/132XXX789',\n      posted_date: '2025-06-04',\n      reference: 'FT-2025-CYBER-001',\n      requirements: ['Bac+2 minimum', 'Go√ªt pour la technique', 'Anglais technique'],\n      benefits: ['Formation certifiante', 'Encadrement expert', 'CDI possible']\n    }\n  ],\n  'La Bonne Alternance': [\n    {\n      title: 'Alternance Technicien Cybers√©curit√© Junior',\n      company: 'Orange Cyberdefense',\n      description: 'Contrat professionnalisation cybers√©curit√©. Missions : support technique s√©curit√©, administration outils SIEM, participation projets s√©curisation.',\n      contract_type: 'Contrat de professionnalisation',\n      location: 'Lyon 3√®me (69)',\n      salary_range: '1100-1400‚Ç¨/mois',\n      start_date: '2025-07-15',\n      duration: '18 mois',\n      url: 'https://labonnealternance.pole-emploi.fr/detail/LBA-2025-CYB-456',\n      posted_date: '2025-06-03',\n      reference: 'LBA-ORANGE-2025',\n      requirements: ['BTS/DUT informatique', 'Notions r√©seaux', 'Motivation s√©curit√©'],\n      benefits: ['Formation interne', '√âquipe experte', '√âvolution carri√®re']\n    }\n  ],\n  'Indeed France': [\n    {\n      title: 'Stage - Assistant Communication Marketing (Non pertinent)',\n      company: 'Agence MarketingPlus',\n      description: 'Stage 6 mois communication digitale. R√©seaux sociaux, √©v√©nementiel, cr√©ation contenu. Pas de lien avec cybers√©curit√©.',\n      contract_type: 'Stage',\n      location: 'Marseille (13)',\n      salary_range: '600‚Ç¨/mois',\n      start_date: '2025-07-01',\n      duration: '6 mois',\n      url: 'https://fr.indeed.com/voir-emploi?jk=abc123marketing',\n      posted_date: '2025-06-02',\n      reference: 'IND-MARKETING-001',\n      requirements: ['Bac+2 communication', 'Cr√©ativit√©', 'R√©seaux sociaux'],\n      benefits: ['Ambiance startup', 'Flexibilit√©', 'Formation']\n    }\n  ],\n  'APEC': [\n    {\n      title: 'Ing√©nieur Cybers√©curit√© Senior - CDI (Non √©ligible)',\n      company: 'Thales Defence',\n      description: 'Poste ing√©nieur cybers√©curit√© confirm√© 5+ ans exp√©rience. Architecture s√©curit√©, audit, management √©quipe. CDI temps plein.',\n      contract_type: 'CDI',\n      location: 'Toulouse (31)',\n      salary_range: '55000-70000‚Ç¨/an',\n      start_date: '2025-07-01',\n      duration: 'Ind√©termin√©e',\n      url: 'https://www.apec.fr/offres-emploi-cadres/0123456789.html',\n      posted_date: '2025-06-01',\n      reference: 'APEC-THALES-2025',\n      requirements: ['Bac+5 cybers√©curit√©', '5+ ans exp√©rience', 'Leadership'],\n      benefits: ['Salaire attractif', 'Projets strat√©giques', 'Formation continue']\n    }\n  ],\n  'Walt Community': [\n    {\n      title: 'Apprentissage D√©veloppeur Cybers√©curit√© - Full Stack',\n      company: 'CyberGuard Solutions',\n      description: 'Apprentissage d√©veloppement outils cybers√©curit√©. Stack: Python, React, Docker, Kubernetes. D√©veloppement SIEM, outils detection.',\n      contract_type: 'Contrat d\\'apprentissage',\n      location: 'Nantes (44)',\n      salary_range: '1300-1600‚Ç¨/mois',\n      start_date: '2025-09-15',\n      duration: '36 mois',\n      url: 'https://walt.community/jobs/cyber-dev-apprentice-fullstack-2025',\n      posted_date: '2025-06-05',\n      reference: 'WALT-CYBER-DEV-001',\n      requirements: ['Bac+2 informatique', 'Python/JavaScript', 'Curiosit√© cyber'],\n      benefits: ['Stack moderne', 'Projets innovants', 'Mentorat expert']\n    }\n  ]\n};\n\n// R√©cup√©ration des offres simul√©es\nconst offers = mockOffersBySite[task.site_name] || [];\n\nconsole.log(`üìã Offres trouv√©es sur ${task.site_name}:`, offers.length);\n\nif (offers.length === 0) {\n  console.log('‚ö†Ô∏è Aucune offre trouv√©e');\n  return {\n    json: {\n      ...task,\n      scraping_result: {\n        success: false,\n        offers_count: 0,\n        offers: [],\n        error_message: 'Aucune offre correspondante trouv√©e',\n        scraped_at: new Date().toISOString()\n      },\n      status: 'COMPLETED_EMPTY'\n    }\n  };\n}\n\n// Enrichissement des offres avec m√©tadonn√©es\nconst enrichedOffers = offers.map((offer, index) => {\n  // Classification automatique bas√©e sur les crit√®res\n  const isAlternanceContract = [\n    'apprentissage', 'alternance', 'professionnalisation'\n  ].some(type => offer.contract_type.toLowerCase().includes(type));\n  \n  const isCyberSecurity = [\n    'cyber', 's√©curit√©', 'security', 'soc', 'siem'\n  ].some(keyword => \n    (offer.title + ' ' + offer.description).toLowerCase().includes(keyword)\n  );\n  \n  const expectedClassification = (isAlternanceContract && isCyberSecurity) ? 'VALIDE' : 'INVALIDE';\n  \n  return {\n    ...offer,\n    offer_id: `${task.site_name.toLowerCase().replace(/\\s+/g, '-')}-${Date.now()}-${index}`,\n    source_site: task.site_name,\n    source_type: task.site_type,\n    scraped_at: new Date().toISOString(),\n    scraping_task_id: task.task_id,\n    \n    // Analyse pr√©liminaire\n    analysis: {\n      is_alternance_contract: isAlternanceContract,\n      is_cybersecurity_domain: isCyberSecurity,\n      expected_classification: expectedClassification,\n      confidence_preliminary: (isAlternanceContract && isCyberSecurity) ? 0.9 : 0.8\n    },\n    \n    // M√©tadonn√©es pour classification Mistral\n    ready_for_classification: true,\n    classification_priority: task.priority\n  };\n});\n\nconsole.log('‚úÖ Enrichissement termin√©');\nenrichedOffers.forEach((offer, index) => {\n  const status = offer.analysis.expected_classification;\n  console.log(`${index + 1}. ${offer.title} ‚Üí ${status}`);\n});\n\nreturn {\n  json: {\n    ...task,\n    scraping_result: {\n      success: true,\n      offers_count: enrichedOffers.length,\n      offers: enrichedOffers,\n      site_analyzed: task.site_name,\n      scraped_at: new Date().toISOString(),\n      next_step: 'CLASSIFICATION_MISTRAL'\n    },\n    status: 'COMPLETED_SUCCESS'\n  }\n};"
      },
      "id": "fe49258d-c225-4eef-8a96-674e88b7cf25",
      "name": "üåê Simuler Scraping",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -880,
        100
      ]
    },
    {
      "parameters": {
        "jsCode": "// EXTRACTION INDIVIDUELLE DES OFFRES POUR CLASSIFICATION\nconst scrapingData = $input.item.json;\n\nconsole.log(`üìÑ === EXTRACTION OFFRES: ${scrapingData.site_name} ===`);\nconsole.log('üìä R√©sultat scraping:', scrapingData.scraping_result.success ? 'SUCC√àS' : '√âCHEC');\nconsole.log('üìã Nombre offres:', scrapingData.scraping_result.offers_count);\n\nif (!scrapingData.scraping_result.success || scrapingData.scraping_result.offers_count === 0) {\n  console.log('‚ö†Ô∏è Pas d\\'offres √† extraire');\n  return [];\n}\n\n// Extraction de chaque offre en item s√©par√©\nconst extractedOffers = scrapingData.scraping_result.offers.map((offer, index) => {\n  console.log(`üìÑ Extraction ${index + 1}/${scrapingData.scraping_result.offers_count}: ${offer.title}`);\n  \n  return {\n    // Donn√©es de l'offre\n    ...offer,\n    \n    // Contexte de scraping\n    scraping_context: {\n      source_site: scrapingData.site_name,\n      source_type: scrapingData.site_type,\n      scraping_task_id: scrapingData.task_id,\n      extraction_index: index,\n      extracted_at: new Date().toISOString()\n    },\n    \n    // Statut pour traitement\n    processing_status: 'EXTRACTED',\n    next_step: 'PREPARE_MISTRAL_CLASSIFICATION'\n  };\n});\n\nconsole.log('‚úÖ Extraction termin√©e:', extractedOffers.length, 'offres individualis√©es');\n\nreturn extractedOffers.map(offer => ({ json: offer }));"
      },
      "id": "b0b0a4de-a8d7-4e61-a349-6fe7c3ed9b84",
      "name": "üìÑ Extraire Offres",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        100
      ]
    },
    {
      "parameters": {
        "jsCode": "// PR√âPARATION PAYLOAD MISTRAL POUR CLASSIFICATION PR√âCISE\nconst offer = $input.item.json;\n\nconsole.log(`ü§ñ === PR√âPARATION MISTRAL: ${offer.title} ===`);\nconsole.log('üè¢ Entreprise:', offer.company);\nconsole.log('üìç Localisation:', offer.location);\nconsole.log('üíº Type contrat:', offer.contract_type);\nconsole.log('üéØ Classification attendue:', offer.analysis.expected_classification);\nconsole.log('üìä Confiance pr√©liminaire:', offer.analysis.confidence_preliminary);\n\n// Prompt optimis√© pour classification alternance cybers√©curit√©\nconst classificationPrompt = `CLASSIFICATION OFFRE ALTERNANCE CYBERS√âCURIT√â :\n\n=== D√âTAILS OFFRE ===\nTITRE: ${offer.title}\nENTREPRISE: ${offer.company}\nTYPE CONTRAT: ${offer.contract_type}\nLIEU: ${offer.location}\nDUR√âE: ${offer.duration}\nSALAIRE: ${offer.salary_range}\nDESCRIPTION: ${offer.description}\nEXIGENCES: ${offer.requirements ? offer.requirements.join(', ') : 'Non sp√©cifi√©es'}\n\n=== CRIT√àRES VALIDATION STRICTE ===\n1. CONTRAT FORMATION :\n   ‚úÖ VALIDE : apprentissage, alternance, contrat professionnalisation\n   ‚ùå INVALIDE : stage, CDI, CDD, freelance, mission\n\n2. DOMAINE CYBERS√âCURIT√â :\n   ‚úÖ VALIDE : cybers√©curit√©, s√©curit√© informatique, SOC, SIEM, pentest, analyse s√©curit√©\n   ‚ùå INVALIDE : d√©veloppement g√©n√©ral, marketing, commercial, RH\n\n=== EXCLUSIONS AUTOMATIQUES ===\n- Stages (m√™me en cybers√©curit√©)\n- Postes seniors (5+ ans exp√©rience)\n- CDI/CDD classiques\n- Domaines non-cyber (marketing, commercial, etc.)\n\n=== R√âPONSE ATTENDUE ===\nCLASSIFICATION: VALIDE ou INVALIDE\nJUSTIFICATION: [Explication courte et pr√©cise]\nCONFIANCE: [0.1 √† 1.0]`;\n\nconst mistralPayload = {\n  model: \"mistral-large-latest\",\n  messages: [\n    {\n      role: \"system\",\n      content: \"Tu es un expert en classification d'offres d'alternance cybers√©curit√©. Tu appliques des crit√®res stricts : SEULES les offres d'apprentissage/alternance/contrat pro EN cybers√©curit√© sont VALIDES. R√©ponds avec le format exact demand√©.\"\n    },\n    {\n      role: \"user\",\n      content: classificationPrompt\n    }\n  ],\n  temperature: 0.1,\n  max_tokens: 200\n};\n\nconsole.log('üìã Payload Mistral cr√©√©');\nconsole.log('üîß Temp√©rature:', mistralPayload.temperature);\nconsole.log('üìè Max tokens:', mistralPayload.max_tokens);\n\nreturn {\n  json: {\n    ...offer,\n    mistral_payload_string: JSON.stringify(mistralPayload),\n    classification_prompt: classificationPrompt,\n    mistral_config: {\n      model: mistralPayload.model,\n      temperature: mistralPayload.temperature,\n      max_tokens: mistralPayload.max_tokens\n    },\n    prepared_for_mistral_at: new Date().toISOString(),\n    processing_status: 'READY_FOR_MISTRAL'\n  }\n};"
      },
      "id": "b130744a-7f97-45e8-8689-0c3b320716e5",
      "name": "ü§ñ Pr√©parer Classification",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/chat/completions",
        "sendHeaders": true,
                "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer fe8GdBIIBwYk8Dj1GvclASPE3j0Zbt95"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "N8N-Workflow/1.0"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "body": "={{ $json.mistral_payload_string }}",
        "options": {
          "timeout": 30000
        }
      },
      "id": "232ba145-8cfa-4651-b897-5d253584368d",
      "name": "üåê API Classification Mistral",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -220,
        100
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// TRAITEMENT SUCC√àS CLASSIFICATION MISTRAL AVEC FILTRAGE INT√âGR√â\nconst originalOffer = $('ü§ñ Pr√©parer Classification').item.json;\nconst mistralResponse = $input.item.json;\n\nconsole.log(`‚úÖ === CLASSIFICATION R√âUSSIE: ${originalOffer.title} ===`);\nconsole.log('üéØ Classification attendue:', originalOffer.analysis.expected_classification);\nconsole.log('üè¢ Source:', originalOffer.scraping_context.source_site);\n\nif (!mistralResponse.choices || !mistralResponse.choices[0] || !mistralResponse.choices[0].message) {\n  console.log('‚ùå Structure r√©ponse Mistral invalide');\n  return [];\n}\n\nconst mistralContent = mistralResponse.choices[0].message.content.trim();\nconsole.log('üìù R√©ponse Mistral compl√®te:', mistralContent);\n\n// Extraction avec regex robustes\nlet classification = 'INCERTAIN';\nlet justification = 'Non trouv√©e';\nlet confidence = 0.5;\n\n// Pattern CLASSIFICATION\nconst classificationMatch = mistralContent.match(/CLASSIFICATION:\\s*(VALIDE|INVALIDE)/i);\nif (classificationMatch) {\n  classification = classificationMatch[1].toUpperCase();\n  console.log('üéØ Classification extraite:', classification);\n}\n\n// Pattern JUSTIFICATION\nconst justificationMatch = mistralContent.match(/JUSTIFICATION:\\s*([^\\n]+)/i);\nif (justificationMatch) {\n  justification = justificationMatch[1].trim();\n  console.log('üìã Justification extraite:', justification);\n}\n\n// Pattern CONFIANCE\nconst confidenceMatch = mistralContent.match(/CONFIANCE:\\s*([0-9.]+)/i);\nif (confidenceMatch) {\n  confidence = parseFloat(confidenceMatch[1]);\n  console.log('üìä Confiance extraite:', confidence);\n}\n\n// V√©rification de la pr√©cision\nconst isCorrectPrediction = classification === originalOffer.analysis.expected_classification;\nconst finalConfidence = classificationMatch ? Math.max(confidence, 0.8) : 0.3;\nconst isValid = classification === 'VALIDE';\n\nconsole.log(`üéØ Pr√©diction correcte: ${isCorrectPrediction}`);\nconsole.log(`üìä Confiance finale: ${finalConfidence}`);\nconsole.log(`üîë Offre valide: ${isValid}`);\n\n// R√©sultat final structur√©\nconst finalResult = {\n  // Donn√©es originales offre\n  offer_id: originalOffer.offer_id,\n  title: originalOffer.title,\n  company: originalOffer.company,\n  description: originalOffer.description,\n  contract_type: originalOffer.contract_type,\n  location: originalOffer.location,\n  salary_range: originalOffer.salary_range,\n  duration: originalOffer.duration,\n  url: originalOffer.url,\n  reference: originalOffer.reference,\n  \n  // Source et contexte\n  source_site: originalOffer.scraping_context.source_site,\n  source_type: originalOffer.scraping_context.source_type,\n  posted_date: originalOffer.posted_date,\n  \n  // R√©sultat classification\n  mistral_classification: classification,\n  mistral_justification: justification,\n  mistral_confidence: finalConfidence,\n  \n  // FLAGS PRINCIPAUX\n  is_valid_offer: isValid,\n  processing_status: 'CLASSIFIED_SUCCESS',\n  \n  // M√©tadonn√©es techniques\n  mistral_metadata: {\n    model_used: mistralResponse.model,\n    tokens_used: mistralResponse.usage,\n    raw_response: mistralContent,\n    classified_at: new Date().toISOString()\n  },\n  \n  // Validation\n  is_alternance_verified: originalOffer.analysis.is_alternance_contract,\n  is_cybersecurity_verified: originalOffer.analysis.is_cybersecurity_domain,\n  overall_quality_score: finalConfidence\n};\n\nif (isValid) {\n  console.log('üéâ ‚úÖ OFFRE RETENUE :', originalOffer.title);\n} else {\n  console.log('‚ùå OFFRE REJET√âE :', originalOffer.title, '- Raison:', justification);\n}\n\n// RETOUR DIRECT POUR √âVITER PROBL√àME DE FILTRAGE\nreturn { json: finalResult };"
      },
      "id": "ca35aece-19c1-4093-9d12-7215359196a5",
      "name": "‚úÖ Traiter Succ√®s Classification",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "// TRAITEMENT ERREUR CLASSIFICATION MISTRAL\nconst originalOffer = $('ü§ñ Pr√©parer Classification').item.json;\nconst errorData = $input.item;\n\nconsole.log(`‚ùå === ERREUR CLASSIFICATION: ${originalOffer.title} ===`);\nconsole.log('üè¢ Source:', originalOffer.scraping_context.source_site);\nconsole.log('üîç Code erreur HTTP:', errorData.httpCode);\nconsole.log('üìã Message erreur:', errorData.message);\n\n// Analyse du type d'erreur\nlet errorType = 'UNKNOWN_ERROR';\nlet errorSuggestion = 'R√©essayer plus tard';\n\nswitch(errorData.httpCode) {\n  case 401:\n    errorType = 'AUTH_ERROR';\n    errorSuggestion = 'V√©rifier la cl√© API Mistral';\n    break;\n  case 422:\n    errorType = 'VALIDATION_ERROR';\n    errorSuggestion = 'V√©rifier le format du payload JSON';\n    break;\n  case 429:\n    errorType = 'RATE_LIMIT_EXCEEDED';\n    errorSuggestion = 'Attendre et r√©essayer (limite d√©bit)';\n    break;\n  case 500:\n  case 502:\n  case 503:\n    errorType = 'SERVER_ERROR';\n    errorSuggestion = 'Probl√®me serveur Mistral, r√©essayer';\n    break;\n  default:\n    errorType = 'NETWORK_ERROR';\n    errorSuggestion = 'Probl√®me r√©seau ou timeout';\n}\n\nconsole.log('üè∑Ô∏è Type erreur identifi√©:', errorType);\nconsole.log('üí° Suggestion:', errorSuggestion);\n\n// STRUCTURE COMPATIBLE AVEC FORMATER REJETEES\nconst errorResult = {\n  // Donn√©es offre originales\n  title: originalOffer.title,\n  company: originalOffer.company,\n  contract_type: originalOffer.contract_type,\n  source_site: originalOffer.scraping_context.source_site,\n  url: originalOffer.url,\n  \n  // Classification (erreur)\n  mistral_classification: 'ERREUR_API',\n  mistral_justification: `Erreur ${errorType}: ${errorData.message || 'Erreur inconnue'}`,\n  \n  // Flags pour template rejet\n  is_valid_offer: false,\n  processing_status: 'CLASSIFICATION_ERROR'\n};\n\nconsole.log('üìä Erreur document√©e pour:', originalOffer.title);\n\nreturn { json: errorResult };"
      },
      "id": "e73e2609-9459-48d7-aa8c-0744b7fb2728",
      "name": "‚ùå Traiter Erreur Classification",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        200
      ]
    },
    {
      "parameters": {
        "jsCode": "// FILTRAGE ET ROUTING DIRECT - SOLUTION FINALE\nconst offre = $input.item.json;\n\nconsole.log(`üîç === FILTRAGE FINAL: ${offre.title} ===`);\nconsole.log('üéØ Classification:', offre.mistral_classification);\nconsole.log('üîë is_valid_offer:', offre.is_valid_offer, typeof offre.is_valid_offer);\nconsole.log('üìä Status:', offre.processing_status);\n\n// LOGIQUE DE FILTRAGE EXPLICITE\nconst isValid = offre.is_valid_offer === true || offre.is_valid_offer === 'true';\nconst isClassifiedValid = offre.mistral_classification === 'VALIDE';\nconst isSuccessStatus = offre.processing_status === 'CLASSIFIED_SUCCESS';\n\nconsole.log('‚úÖ Tests filtrage:');\nconsole.log('  - isValid:', isValid);\nconsole.log('  - isClassifiedValid:', isClassifiedValid);\nconsole.log('  - isSuccessStatus:', isSuccessStatus);\n\nconst shouldBeRetained = isValid && isClassifiedValid && isSuccessStatus;\n\nif (shouldBeRetained) {\n  console.log('üéâ === OFFRE RETENUE - FORMATAGE DIRECT ===');\n  \n  // FORMATAGE DIRECT OFFRES RETENUES\n  return {\n    json: {\n      action: 'OFFRE_ALTERNANCE_CYBER_RETENUE',\n      titre_offre: offre.title,\n      entreprise: offre.company,\n      type_contrat: offre.contract_type,\n      localisation: offre.location,\n      salaire: offre.salary_range,\n      lien_candidature: offre.url,\n      source_site: offre.source_site,\n      justification_mistral: offre.mistral_justification,\n      score_confiance: offre.mistral_confidence,\n      resume: `‚úÖ ${offre.title} chez ${offre.company} - ${offre.contract_type} - ${offre.location}`,\n      date_traitement: new Date().toISOString(),\n      debug_info: {\n        original_classification: offre.mistral_classification,\n        filter_decision: 'RETAINED_DIRECTLY'\n      }\n    }\n  };\n} else {\n  console.log('‚ùå === OFFRE REJET√âE - FORMATAGE DIRECT ===');\n  \n  // FORMATAGE DIRECT OFFRES REJET√âES\n  return {\n    json: {\n      action: 'OFFRE_REJETEE',\n      titre_offre: offre.title,\n      entreprise: offre.company,\n      raison_rejet: `${offre.mistral_classification} - ${offre.mistral_justification}`,\n      probleme_contrat: `Type: ${offre.contract_type} (attendu: alternance/apprentissage)`,\n      source_site: offre.source_site,\n      resume: `‚ùå ${offre.title} chez ${offre.company} - Rejet√©: ${offre.mistral_classification}`,\n      date_traitement: new Date().toISOString(),\n      debug_info: {\n        original_classification: offre.mistral_classification,\n        filter_decision: 'REJECTED_DIRECTLY'\n      }\n    }\n  };\n}"
      },
      "id": "e4da5028-bca0-4064-adb6-5c6fe175ce3b",
      "name": "üéØ Filtrage et Formatage Final",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        100
            ]
    }
  ],
  "pinData": {},
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "üá´üá∑ Config Sites France",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üá´üá∑ Config Sites France": {
      "main": [
        [
          {
            "node": "üåê Simuler Scraping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üåê Simuler Scraping": {
      "main": [
        [
          {
            "node": "üìÑ Extraire Offres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÑ Extraire Offres": {
      "main": [
        [
          {
            "node": "ü§ñ Pr√©parer Classification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ Pr√©parer Classification": {
      "main": [
        [
          {
            "node": "üåê API Classification Mistral",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üåê API Classification Mistral": {
      "main": [
        [
          {
            "node": "‚úÖ Traiter Succ√®s Classification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚ùå Traiter Erreur Classification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Traiter Succ√®s Classification": {
      "main": [
        [
          {
            "node": "üéØ Filtrage et Formatage Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùå Traiter Erreur Classification": {
      "main": [
        [
          {
            "node": "‚ùå Formater Offres Rejet√©es",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üéØ Filtrage et Formatage Final": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "workflow-alternance-cybersecurite-corrige",
  "meta": {
    "instanceId": "77649bb8ece500ac0c757974f51e9cabb1d2bb2ab3e605617a5d419377d2a6a4"
  },
  "id": "AlternanceCyberCorrige",
  "tags": ["alternance", "cybersecurite", "mistral", "corrige"]
}