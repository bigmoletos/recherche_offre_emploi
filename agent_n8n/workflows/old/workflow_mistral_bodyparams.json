{
  "name": "Mistral avec BodyParameters",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "Test Manuel",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "functionCode": "// Donn√©es de test STATIQUES pour Mistral\nconst mistralData = {\n  model: \"mistral-small-latest\",\n  messages: [\n    {\n      role: \"user\",\n      content: \"Analyse cette offre d'emploi : Titre: Alternance Cybers√©curit√© chez TechCorp √† Paris. Cette offre correspond-elle √† une alternance en cybers√©curit√© ? R√©ponds uniquement par: VALIDE ou INVALIDE\"\n    }\n  ],\n  temperature: 0.1,\n  max_tokens: 10\n};\n\nconsole.log('üß™ Pr√©paration donn√©es Mistral - BodyParameters');\nconsole.log('Model:', mistralData.model);\nconsole.log('Messages:', mistralData.messages.length);\n\nreturn {\n  json: {\n    model: mistralData.model,\n    messages: JSON.stringify(mistralData.messages),\n    temperature: mistralData.temperature,\n    max_tokens: mistralData.max_tokens,\n    ready: true\n  }\n};"
      },
      "id": "preparation-data",
      "name": "Pr√©paration Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "mistralCloudApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "={{ $json.model }}"
            },
            {
              "name": "messages",
              "value": "={{ $json.messages }}"
            },
            {
              "name": "temperature",
              "value": "={{ $json.temperature }}"
            },
            {
              "name": "max_tokens",
              "value": "={{ $json.max_tokens }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "mistral-api-call",
      "name": "Mistral API Call",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [680, 300]
    },
    {
      "parameters": {
        "functionCode": "// V√©rification d√©taill√©e de la r√©ponse Mistral\nconsole.log('üéØ === ANALYSE R√âPONSE MISTRAL ===');\nconsole.log('Type r√©ponse:', typeof $json);\nconsole.log('Cl√©s disponibles:', Object.keys($json || {}));\n\nif ($json && $json.choices && Array.isArray($json.choices) && $json.choices.length > 0) {\n  const choice = $json.choices[0];\n  const message = choice.message;\n  const content = message ? message.content : 'CONTENU_VIDE';\n  \n  console.log('‚úÖ Structure Mistral valide');\n  console.log('Content:', content);\n  \n  const isValid = content && content.toUpperCase().includes('VALIDE');\n  \n  return {\n    json: {\n      success: true,\n      mistral_response: content,\n      classification: isValid ? 'VALIDE' : 'INVALIDE',\n      is_valid: isValid,\n      full_response: $json,\n      test_result: 'SUCCESS'\n    }\n  };\n} else {\n  console.log('‚ùå Structure Mistral invalide');\n  console.log('R√©ponse compl√®te:', JSON.stringify($json, null, 2));\n  \n  return {\n    json: {\n      success: false,\n      error: 'Structure r√©ponse Mistral invalide',\n      test_result: 'FAILED',\n      received_data: $json\n    }\n  };\n}"
      },
      "id": "analyse-reponse",
      "name": "Analyse R√©ponse",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Test Manuel": {
      "main": [
        [
          {
            "node": "Pr√©paration Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pr√©paration Data": {
      "main": [
        [
          {
            "node": "Mistral API Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral API Call": {
      "main": [
        [
          {
            "node": "Analyse R√©ponse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "mistral-bodyparams",
      "name": "BodyParameters Test"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-06-03T22:30:00.000Z",
  "versionId": "1.0.0"
}