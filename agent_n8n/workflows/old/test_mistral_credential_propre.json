{
  "name": "Test Mistral Credential PROPRE",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "Test Manuel",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "functionCode": "// Pr√©paration payload avec credential N8N uniquement\n// AUCUN header hardcod√© pour √©viter les conflits\n\nconst payload = {\n  model: \"mistral-small-latest\",\n  messages: [\n    {\n      role: \"user\",\n      content: \"Analyse: Titre 'Alternance Cybers√©curit√©' - Valide ? R√©ponds VALIDE ou INVALIDE.\"\n    }\n  ],\n  temperature: 0.1,\n  max_tokens: 15\n};\n\nconsole.log('üß™ === TEST CREDENTIAL PROPRE ===');\nconsole.log('‚úÖ Payload:', JSON.stringify(payload, null, 2));\nconsole.log('üîë Auth: Credential N8N seulement');\nconsole.log('üö´ Pas de headers hardcod√©s');\nconsole.log('üìè Taille:', JSON.stringify(payload).length, 'chars');\n\n// Validation\nif (!payload.model || !payload.messages || payload.messages.length === 0) {\n  throw new Error('Payload invalide');\n}\n\nconsole.log('‚úÖ Validation OK - utilisation credential...');\n\nreturn { json: payload };"
      },
      "id": "preparation",
      "name": "Pr√©paration",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ $json }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 30000
        }
      },
      "id": "api-call",
      "name": "API Call Credential",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [680, 300]
    },
    {
      "parameters": {
        "functionCode": "// Debug r√©ponse avec credential\nconsole.log('üéØ === R√âPONSE CREDENTIAL TEST ===');\nconsole.log('üìä Type:', typeof $json);\nconsole.log('üîç Keys:', Object.keys($json || {}));\nconsole.log('üìã R√©ponse:');\nconsole.log(JSON.stringify($json, null, 2));\n\n// Analyse structure\nif ($json && $json.choices && $json.choices[0] && $json.choices[0].message && $json.choices[0].message.content) {\n  const content = $json.choices[0].message.content.trim();\n  \n  console.log('‚úÖ === CREDENTIAL SUCCESS ! ===');\n  console.log('üìù R√©ponse:', content);\n  \n  const isValid = content.toUpperCase().includes('VALIDE');\n  \n  return {\n    json: {\n      success: true,\n      response: content,\n      classification: isValid ? 'VALIDE' : 'INVALIDE',\n      method: 'credential_auth',\n      model: $json.model,\n      usage: $json.usage\n    }\n  };\n} \n\n// Erreur API\nelse if ($json && $json.error) {\n  console.log('üö® Erreur API via credential:', $json.error);\n  return {\n    json: {\n      success: false,\n      error: $json.error,\n      method: 'credential_auth_error'\n    }\n  };\n}\n\n// Structure inattendue\nelse {\n  console.log('‚ùå Structure inattendue avec credential');\n  return {\n    json: {\n      success: false,\n      error: 'Structure response invalide',\n      received: $json,\n      method: 'credential_auth_failed'\n    }\n  };\n}"
      },
      "id": "debug-response",
      "name": "Debug Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Test Manuel": {
      "main": [
        [
          {
            "node": "Pr√©paration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pr√©paration": {
      "main": [
        [
          {
            "node": "API Call Credential",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API Call Credential": {
      "main": [
        [
          {
            "node": "Debug Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "test-credential-propre",
      "name": "Credential Propre"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-06-05T08:45:00.000Z",
  "versionId": "7.0.0"
}