{
  "name": "Classification Mistral - TOUS ITEMS",
  "nodes": [
    {
      "parameters": {},
      "id": "a8c7f4d1-234e-4567-8901-23456789abcd",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// G√âN√âRATEUR D'OFFRES TEST R√âALISTES POUR MISTRAL-LARGE\n\nconsole.log('üß™ === G√âN√âRATION OFFRES TEST R√âALISTES ===');\n\n// Offres r√©alistes pour tester la classification Mistral Large\nconst offresTest = [\n  {\n    id: 'test-valide-1',\n    title: 'Contrat d\\'apprentissage - Analyste Cybers√©curit√© SOC',\n    company: 'Orange Cyberdefense',\n    description: 'Nous proposons un contrat d\\'apprentissage de 24 mois pour former un analyste cybers√©curit√© au sein de notre SOC (Security Operations Center). Missions : surveillance des syst√®mes d\\'information, analyse des incidents de s√©curit√©, r√©ponse aux alertes SIEM, veille technologique. Formation : Master 2 cybers√©curit√© en alternance. Rythme : 3 semaines en entreprise / 1 semaine √† l\\'√©cole.',\n    location: 'Paris, France',\n    source: 'TEST_REALISTE',\n    url: 'https://jobs.orange.com/apprentissage-cybersec',\n    keywords: ['apprentissage', 'cybers√©curit√©', 'SOC', 'alternance'],\n    date_posted: '2024-01-15',\n    contract_type: 'Contrat d\\'apprentissage'\n  },\n  {\n    id: 'test-invalide-1',\n    title: 'Stage - Marketing Digital et Communication',\n    company: 'AgenceComm',\n    description: 'Stage de 6 mois en marketing digital. Missions : gestion des r√©seaux sociaux, cr√©ation de contenu, campagnes publicitaires, analyse des performances. Recherche √©tudiant en Master Marketing. Stage non r√©mun√©r√© avec convention obligatoire.',\n    location: 'Lyon, France',\n    source: 'TEST_REALISTE',\n    url: 'https://jobs.agencecomm.fr/stage-marketing',\n    keywords: ['stage', 'marketing', 'digital', 'communication'],\n    date_posted: '2024-01-10',\n    contract_type: 'Stage'\n  },\n  {\n    id: 'test-valide-2',\n    title: 'Alternance - Pentesteur Junior en Formation',\n    company: 'Wavestone Cybersecurity',\n    description: 'Formation alternance de 2 ans pour devenir pentesteur. Missions : tests d\\'intrusion sur applications web, audit de s√©curit√© r√©seau, r√©daction de rapports de vuln√©rabilit√©s, accompagnement par experts. Formation : Master cybers√©curit√© sp√©cialit√© pentest. Contrat de professionnalisation.',\n    location: 'Marseille, France',\n    source: 'TEST_REALISTE',\n    url: 'https://careers.wavestone.com/alternance-pentest',\n    keywords: ['alternance', 'pentest', 'cybers√©curit√©', 'audit'],\n    date_posted: '2024-01-12',\n    contract_type: 'Contrat de professionnalisation'\n  },\n  {\n    id: 'test-invalide-2',\n    title: 'CDI - Ing√©nieur Cybers√©curit√© Senior 7+ ans',\n    company: 'Thales Group',\n    description: 'Poste d\\'ing√©nieur cybers√©curit√© senior avec 7+ ann√©es d\\'exp√©rience. Missions : architecture s√©curit√©, gestion d\\'√©quipe, audits complexes, relation clients. Salaire 65-80k‚Ç¨. T√©l√©travail partiel possible.',\n    location: 'Toulouse, France',\n    source: 'TEST_REALISTE',\n    url: 'https://jobs.thalesgroup.com/senior-cybersec',\n    keywords: ['CDI', 'senior', 'cybers√©curit√©', 'exp√©rience'],\n    date_posted: '2024-01-08',\n    contract_type: 'CDI'\n  },\n  {\n    id: 'test-valide-3',\n    title: 'Apprentissage - Consultant GRC S√©curit√© D√©butant',\n    company: 'Deloitte Cyber Risk',\n    description: 'Contrat d\\'apprentissage en Gouvernance, Risque et Conformit√© (GRC) cybers√©curit√©. Missions : analyse des risques cyber, mise en conformit√© RGPD/ISO27001, audit interne, formation aux enjeux r√©glementaires. Profil : √©tudiant Master 2 s√©curit√© informatique. Dur√©e : 24 mois.',\n    location: 'Nantes, France',\n    source: 'TEST_REALISTE',\n    url: 'https://careers.deloitte.fr/apprentissage-grc',\n    keywords: ['apprentissage', 'GRC', 'cybers√©curit√©', 'conformit√©'],\n    date_posted: '2024-01-14',\n    contract_type: 'Contrat d\\'apprentissage'\n  },\n  {\n    id: 'test-invalide-3',\n    title: 'Stage - S√©curit√© des B√¢timents et Surveillance',\n    company: 'Securitas France',\n    description: 'Stage de 4 mois en s√©curit√© physique des b√¢timents. Missions : surveillance vid√©o, contr√¥le d\\'acc√®s, rondes de s√©curit√©, gestion des alarmes. Formation s√©curit√© agent de pr√©vention et de s√©curit√©.',\n    location: 'Bordeaux, France',\n    source: 'TEST_REALISTE',\n    url: 'https://jobs.securitas.fr/stage-surveillance',\n    keywords: ['stage', 's√©curit√© physique', 'surveillance', 'b√¢timent'],\n    date_posted: '2024-01-09',\n    contract_type: 'Stage'\n  }\n];\n\nconsole.log('üìã Offres test g√©n√©r√©es:', offresTest.length);\nconsole.log('‚úÖ Offres VALIDES attendues: 3 (alternances cybers√©curit√©)');\nconsole.log('‚ùå Offres INVALIDES attendues: 3 (stages ou hors cybers√©curit√©)');\n\n// Log d√©taill√© pour d√©bogage\noffresTest.forEach((offre, index) => {\n  const shouldBeValid = offre.id.includes('valide');\n  console.log(`${index + 1}. ${offre.title} ‚Üí ${shouldBeValid ? '‚úÖ DOIT √äTRE VALIDE' : '‚ùå DOIT √äTRE INVALIDE'}`);\n});\n\nconsole.log('üöÄ Envoi vers Classification Mistral Large...');\n\n// Retourner chaque offre comme un item s√©par√© pour le traitement\nreturn offresTest.map(offre => ({ json: offre }));"
      },
      "id": "b9d8e5f2-345f-5678-9012-3456789abcde",
      "name": "üß™ G√©n√©rateur Offres Test R√©alistes",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "runOnceForAllItems": true,
        "jsCode": "// TRAITEMENT DE TOUS LES ITEMS EN UNE SEULE FOIS\nconsole.log('üî¢ === D√âBUT TRAITEMENT GLOBAL ===');\nconst allItems = $input.all();\nconsole.log('üìã Nombre total d\\'items √† traiter:', allItems.length);\n\n// Lister tous les items re√ßus\nallItems.forEach((item, index) => {\n  console.log(`üìÑ Item ${index + 1}:`, item.json.id, '-', item.json.title);\n});\n\n// CONFIGURATION MISTRAL\nconst config = {\n  apiKey: process.env.MISTRAL_API_KEY || 'fe8GdBIIBwYk8Dj1GvclASPE3j0Zbt95',\n  apiUrl: 'https://api.mistral.ai/v1/chat/completions',\n  model: 'mistral-large-latest',\n  temperature: 0.05,\n  max_tokens: 300\n};\n\n// Fonction pour classer une offre individuelle\nasync function classifyOffer(offre, index) {\n  console.log(`\\nü§ñ === CLASSIFICATION ${index + 1}/${allItems.length}: ${offre.title} ===`);\n  console.log('üè¢ Entreprise:', offre.company);\n  console.log('üîë ID offre:', offre.id);\n  console.log('üìù Type contrat:', offre.contract_type);\n\n  const prompt = `Tu es un expert RH sp√©cialis√© en cybers√©curit√© et contrats d'alternance.\n\nüéØ **MISSION**: Analyser si cette offre correspond EXACTEMENT √† une ALTERNANCE en CYBERS√âCURIT√â.\n\nüìã **OFFRE √Ä ANALYSER**:\n‚Ä¢ **Titre**: ${offre.title}\n‚Ä¢ **Entreprise**: ${offre.company}\n‚Ä¢ **Description**: ${offre.description || 'Non sp√©cifi√©e'}\n‚Ä¢ **Type de contrat**: ${offre.contract_type || 'Non sp√©cifi√©'}\n‚Ä¢ **Mots-cl√©s**: ${offre.keywords ? offre.keywords.join(', ') : 'Aucun'}\n\nüîç **CRIT√àRES OBLIGATOIRES**:\n\n**1. TYPE DE CONTRAT (CRITIQUE)**:\n‚úÖ ALTERNANCE: \"alternance\", \"apprentissage\", \"contrat pro\", \"contrat de professionnalisation\"\n‚ùå AUTRES: \"stage\", \"CDI\", \"CDD\", \"freelance\", \"mission\"\n\n**2. DOMAINE CYBERS√âCURIT√â (CRITIQUE)**:\n‚úÖ CYBER: \"cybers√©curit√©\", \"s√©curit√© informatique\", \"s√©curit√© des SI\"\n‚úÖ SP√âCIALIT√âS: \"SOC\", \"SIEM\", \"pentest\", \"audit s√©curit√©\", \"GRC\", \"forensic\"\n‚ùå AUTRES: \"s√©curit√© physique\", \"s√©curit√© b√¢timent\", \"surveillance\", \"marketing\"\n\n**3. NIVEAU FORMATION (IMPORTANT)**:\n‚úÖ JUNIOR: \"junior\", \"d√©butant\", \"√©tudiant\", \"formation\", \"apprenti\"\n‚ùå SENIOR: \"5+ ans\", \"expert\", \"senior\", \"confirm√©\"\n\nüìù **FORMAT DE R√âPONSE OBLIGATOIRE**:\n**CLASSIFICATION**: VALIDE ou INVALIDE\n**JUSTIFICATION**: [Explique en 1-2 phrases pourquoi]\n\nAnalyse maintenant cette offre.`;\n\n  const payload = {\n    model: config.model,\n    messages: [\n      {\n        role: \"system\",\n        content: \"Tu es un expert RH avec 15 ans d'exp√©rience en cybers√©curit√© et alternance. Tu analyses les offres avec pr√©cision.\"\n      },\n      {\n        role: \"user\",\n        content: prompt\n      }\n    ],\n    temperature: config.temperature,\n    max_tokens: config.max_tokens\n  };\n\n  try {\n    console.log(`üåê Appel API Mistral pour item ${index + 1}...`);\n    \n    const response = await fetch(config.apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${config.apiKey}`\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.log(`‚ùå Erreur API item ${index + 1}:`, response.status, errorText);\n      return {\n        ...offre,\n        mistral_response: 'ERREUR_API',\n        classification: 'ERREUR',\n        is_valid: false,\n        confidence: 0,\n        error: `HTTP ${response.status}: ${errorText}`,\n        processed_at: new Date().toISOString(),\n        item_index: index\n      };\n    }\n\n    const data = await response.json();\n    \n    if (data && data.choices && data.choices[0] && data.choices[0].message && data.choices[0].message.content) {\n      const content = data.choices[0].message.content.trim();\n      console.log(`üìù R√©ponse Mistral item ${index + 1}:`, content.substring(0, 100) + '...');\n\n      // Classification\n      const contentUpper = content.toUpperCase();\n      let classification, isValid, confidence;\n\n      if (contentUpper.includes('VALIDE') && !contentUpper.includes('INVALIDE')) {\n        classification = 'VALIDE';\n        isValid = true;\n        confidence = 0.9;\n        console.log(`‚úÖ Item ${index + 1} - VALID√â`);\n      } else if (contentUpper.includes('INVALIDE')) {\n        classification = 'INVALIDE';\n        isValid = false;\n        confidence = 0.9;\n        console.log(`‚ùå Item ${index + 1} - REJET√â`);\n      } else {\n        classification = 'INCERTAIN';\n        isValid = false;\n        confidence = 0.3;\n        console.log(`‚ö†Ô∏è Item ${index + 1} - INCERTAIN`);\n      }\n\n      return {\n        ...offre,\n        mistral_response: content,\n        classification: classification,\n        is_valid: isValid,\n        confidence: confidence,\n        model_used: data.model || config.model,\n        usage: data.usage || {},\n        processed_at: new Date().toISOString(),\n        item_index: index,\n        total_items: allItems.length\n      };\n    } else {\n      console.log(`‚ùå Structure r√©ponse invalide item ${index + 1}`);\n      return {\n        ...offre,\n        mistral_response: 'STRUCTURE_INVALIDE',\n        classification: 'ERREUR',\n        is_valid: false,\n        confidence: 0,\n        error: 'Structure r√©ponse Mistral invalide',\n        processed_at: new Date().toISOString(),\n        item_index: index\n      };\n    }\n\n  } catch (error) {\n    console.log(`üö® Erreur item ${index + 1}:`, error.message);\n    return {\n      ...offre,\n      mistral_response: 'ERREUR_RESEAU',\n      classification: 'ERREUR',\n      is_valid: false,\n      confidence: 0,\n      error: `${error.constructor.name}: ${error.message}`,\n      processed_at: new Date().toISOString(),\n      item_index: index\n    };\n  }\n}\n\n// TRAITEMENT S√âQUENTIEL DE TOUTES LES OFFRES\nconsole.log('üöÄ D√©but du traitement s√©quentiel...');\nconst results = [];\n\nfor (let i = 0; i < allItems.length; i++) {\n  const offre = allItems[i].json;\n  const result = await classifyOffer(offre, i);\n  results.push({ json: result });\n  \n  // Petite pause pour √©viter les limites de rate\n  if (i < allItems.length - 1) {\n    await new Promise(resolve => setTimeout(resolve, 500));\n  }\n}\n\nconsole.log('\\nüìä === R√âSUM√â FINAL ===');\nconst validCount = results.filter(r => r.json.classification === 'VALIDE').length;\nconst invalidCount = results.filter(r => r.json.classification === 'INVALIDE').length;\nconst errorCount = results.filter(r => r.json.classification === 'ERREUR').length;\n\nconsole.log(`‚úÖ Offres VALIDES: ${validCount}`);\nconsole.log(`‚ùå Offres INVALIDES: ${invalidCount}`);\nconsole.log(`üö® Erreurs: ${errorCount}`);\nconsole.log('üèÅ Traitement termin√© !\\n');\n\n// Retourner tous les r√©sultats\nreturn results;"
      },
      "id": "c0e9f6g3-456g-6789-0123-456789abcdef",
      "name": "Classification Mistral - TOUS ITEMS",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "12345678-abcd-1234-abcd-123456789abc",
              "leftValue": "={{ $json.classification }}",
              "rightValue": "VALIDE",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d1f0a7h4-567h-7890-1234-56789abcdef0",
      "name": "Offre Valide ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "33333333-4444-5555-6666-777777777777",
              "name": "action",
              "value": "OFFRE_ACCEPTEE",
              "type": "string"
            },
            {
              "id": "99999999-aaaa-bbbb-cccc-dddddddddddd",
              "name": "message",
              "value": "‚úÖ Offre valid√©e pour alternance cybers√©curit√©",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e2g1b8i5-678i-8901-2345-6789abcdef01",
      "name": "Traitement Valide",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "55555555-6666-7777-8888-999999999999",
              "name": "action",
              "value": "OFFRE_REJETEE",
              "type": "string"
            },
            {
              "id": "bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
              "name": "message",
              "value": "‚ùå Offre ne correspond pas aux crit√®res",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f3h2c9j6-789j-9012-3456-789abcdef012",
      "name": "Traitement Invalide",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1120, 400]
    }
  ],
  "pinData": {},
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "üß™ G√©n√©rateur Offres Test R√©alistes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üß™ G√©n√©rateur Offres Test R√©alistes": {
      "main": [
        [
          {
            "node": "Classification Mistral - TOUS ITEMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classification Mistral - TOUS ITEMS": {
      "main": [
        [
          {
            "node": "Offre Valide ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Offre Valide ?": {
      "main": [
        [
          {
            "node": "Traitement Valide",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Traitement Invalide",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "12345678-1234-1234-1234-123456789abc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "12345678-1234-1234-1234-123456789abc"
  },
  "id": "12345678-1234-1234-1234-123456789abc",
  "tags": []
}